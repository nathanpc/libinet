{"name":"libinet++","tagline":"A networking library for humans that code in C++","body":"# Another?\r\n\r\nYes, this is another networking library, but I promise, this one is different. This library was created for **humans** to use. cURL is great, but there's one huge problem with it: It's a C library, which means it looks like a alien designed the API (just like everything that involves C).\r\n\r\nThis library was built using one of the worst library ever invented in the face of this planet: The [GNU Sockets Library](http://www.cs.utah.edu/dept/old/texinfo/glibc-manual-0.02/library_15.html). This means I tortured myself to carve this library so you'll never have to torture yourself dealing with C libraries for networking.\r\n\r\n\r\n# What's inside the package?\r\n\r\nThis library comes with an implementation of Sockets (`sockets.h`) and a HTTP client (`http.h`), which means you can extend it to suit your needs (remember to submit a Pull Request).\r\n\r\n\r\n# Some examples\r\n\r\nYou can check out the examples in the `examples/` directory, but I've pasted them here for your convenience.\r\n\r\n```c++\r\n#include <iostream>\r\n#include <string>\r\n\r\n#include \"libinet/sockets.h\"\r\nusing namespace std;\r\n\r\nbool socket_data_callback(string data) {\r\n\t// If something went wrong while you were parsing return false!\r\n\tcout << data << endl;\r\n\treturn true;\r\n}\r\n\r\nint main(int argc, char *argv[]) {\r\n\t// Setup the socket and connect.\r\n\tSocket socket(\"localhost\", 80, &socket_data_callback);\r\n\tsocket.connect();\r\n\r\n\t// Send some information.\r\n\tsocket.send_data(\"GET / HTTP/1.1\\r\\n\");\r\n\tsocket.send_data(\"Host: localhost\\r\\n\\r\\n\");\r\n\r\n\t// Get the response.\r\n\tsocket.receive();\r\n\r\n\treturn 0;\r\n}\r\n```\r\n\r\n```c++\r\n#include <iostream>\r\n#include <string>\r\n#include <vector>\r\n\r\n#include \"libinet/http.h\"\r\nusing namespace std;\r\n\r\nint main(int argc, char *argv[]) {\r\n\t// Setup the connection.\r\n\tHTTP http(\"localhost\", 80);\r\n\tHTTP_Response response;\r\n\r\n\thttp.add_header(\"User-Agent\", \"libinet++/0.1\");\r\n\tresponse = http.request(\"POST\", \"/test.php\", \"Testing the POST body stuff.\");\r\n\r\n\t// Print the raw response.\r\n\t//cout << response.raw << endl;\r\n\r\n\t// Print the response status (hope it's 200 OK).\r\n\tcout << response.status_code << \" \" << response.status_message << endl;\r\n\r\n\t// Print the headers.\r\n\tfor (size_t i = 0; i < response.headers.size(); i++) {\r\n\t\tvector<string> header = response.headers.at(i);\r\n\t\tcout << header.at(0) << \": \" << header.at(1) << endl;\r\n\t}\r\n\r\n\t// Print body.\r\n\tcout << endl << response.body << endl;\r\n\r\n\treturn 0;\r\n}\r\n```\r\n\r\n\r\n# Contribute!\r\n\r\nYou think this library suck? You can fix it by submitting a Pull Request or a Issue!\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}